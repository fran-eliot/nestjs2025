Configurar el entorno: (una vez)
-Instalar NEST: npm install -g @nestjs/cli
-Plugin de Visual Studio: Nest File Generator

Crear proyecto: (cada vez que se crea un servicio):
-Desde línea comandos (terminal): nest new nombre_app
-Opcionalmente, eliminamos el app.service y el app.controller que se crean por defecto
-Desactivar prettier: Eliminando la linea eslintPluginPrettierRecommended, en el archivo eslint.config.mjs
-Desactivar modo estricto: "strictNullChecks": false, en tsconfig.json
-Crear modelo de datos: sobre el menú del botón derecho, elegimos New File y a continuación
de la dirección que aparece en la cajita, añadimos model/Libros.ts
-Crear service: sobre el menú del botón derecho, elegimos 
Nestjs File Generator->Generate Service. Nos pedirá la carpeta (service) y el nombre
del servicio.
-Crear controller: sobre el menú del botón derecho, elegimos
Nestjs File Generator->Generate Controller. Nos pedirá la carpeta (controller) y el nombre
del controller.
-Una vez creados servicie y controller, se registran en el app.module
-Para ejecutar el proyecto, entramos con el terminal en la carpeta del proyecto
y ahí escribir el comando: npm run start:dev. Esta terminal no se debe cerrar


Servicio REST de cuentas

Crear un servicio REST para operar con cuentas bancarias.
Cada cuenta se define por numeroCuenta, saldo, titular, tipo
El servicio expondrá los siguientes recursos/endpoints:
-Alta de cuenta. Recibe una cuenta y la da de alta. No se deben permitir
cuentas cno numeroCuenta repetido
-Cuentas por saldo mínimo. Devuelve un JSON con todas las cuentas cuyo saldo
sea superior al recibido como parámetro.
-Buscar cuenta por numeroCuenta.
-Buscar cuentas por tipo de cuenta
-Eliminar cuenta por numeroCuenta.